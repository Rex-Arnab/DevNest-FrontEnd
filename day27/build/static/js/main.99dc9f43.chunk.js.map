{"version":3,"sources":["Reducer/TodoReducer.jsx","Reducer/index.js","store.js","App.js","actions/index.js","index.js"],"names":["TodoReducer","state","action","type","payload","filter","item","index","rootReducer","combineReducers","todo","store","createStore","TodoPanel","useState","setItem","dispatch","useDispatch","className","placeHolder","value","onChange","e","target","onClick","AddItem","DisplayTodoList","useSelector","map","Card","title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLASeA,EATK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,MAAmB,aAAhBA,EAAOC,KACA,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UACH,gBAAhBF,EAAOC,KACNF,EAAMI,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUL,EAAOE,WAEnDH,G,OCEIO,EAJKC,YAAgB,CAChCC,KAAMV,ICAKW,EAFDC,YAAYJ,G,cCG1B,SAASK,IAAY,IAAD,EACMC,mBAAS,IADf,mBACXR,EADW,KACLS,EADK,KAEZC,EAAWC,cAMjB,OACE,sBAAKC,UAAU,YAAf,UACE,2CACA,sBAAKA,UAAU,SAAf,UACE,uBAAOf,KAAK,OAAOgB,YAAY,eAAeC,MAAOd,EAAMe,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,UAC7F,wBAAQI,QATQ,WACpBR,ECXY,SAACV,GACb,MAAO,CACHH,KAAM,WACNC,QAASE,GDQJmB,CAAQnB,IACjBS,EAAQ,KAOJ,gCAMR,SAASW,IACP,IAAMhB,EAAOiB,aAAY,SAAC1B,GAAD,OAAWA,EAAMS,QAC1C,OACE,qBAAKQ,UAAU,YAAf,SACGR,EAAKkB,KAAI,SAACtB,EAAMC,GACf,OAAO,cAACsB,EAAD,CAAMC,MAAOxB,GAAWC,QAMvC,SAASsB,EAAT,GAAuB,IAARC,EAAO,EAAPA,MACb,OACE,qBAAKZ,UAAU,OAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyBY,MAgBhBC,MAXf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,eAAC,IAAD,CAAUP,MAAOA,EAAjB,UACE,cAACE,EAAD,IACA,cAACa,EAAD,UE7CRM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99dc9f43.chunk.js","sourcesContent":["const TodoReducer = (state = [], action) => {\n    if(action.type === 'ADD_ITEM'){\n        return [...state, action.payload]\n    } else if(action.type === 'REMOVE_ITEM'){\n        return state.filter((item, index) => index !== action.payload)\n    }\n    return state;\n}\n\nexport default TodoReducer;","import TodoReducer from \"./TodoReducer\";\nimport { combineReducers } from 'redux'\n\n\nconst rootReducer = combineReducers({\n    todo: TodoReducer\n})\n\nexport default rootReducer;","import rootReducer from \"./Reducer\";\nimport { createStore } from 'redux'\n\nconst store = createStore(rootReducer)\n\nexport default store;","import './App.css';\nimport { useState } from 'react'\nimport store from './store'\nimport { Provider, useDispatch, useSelector } from 'react-redux'\nimport { AddItem } from './actions'\n\nfunction TodoPanel(){\n  const [item, setItem] = useState('')\n  const dispatch = useDispatch()\n\n  const handleAddTodo = () => {\n    dispatch(AddItem(item))\n    setItem('')\n  }\n  return (\n    <div className='todoAdder'>\n      <h1>Todo List</h1>\n      <div className=\"action\">\n        <input type=\"text\" placeHolder='Enter Text..' value={item} onChange={(e) => setItem(e.target.value)}/>\n        <button onClick={handleAddTodo}>ðŸ˜š</button>\n      </div>\n    </div>\n  )\n}\n\nfunction DisplayTodoList(){\n  const todo = useSelector((state) => state.todo)\n  return (\n    <div className=\"container\">\n      {todo.map((item, index) => {\n        return <Card title={item} key={index} />\n      })}\n    </div>\n  )\n}\n\nfunction Card({title}){\n  return (\n    <div className=\"item\">\n      <span className=\"title\">{title}</span>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <TodoPanel />\n        <DisplayTodoList />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const AddItem = (item) => {\n    return {\n        type: 'ADD_ITEM',\n        payload: item\n    }\n}\n\nconst RemoveItem = (id) => {\n    return {\n        type: 'REMOVE_ITEM',\n        payload: id\n    }\n}\n\nexport {\n    AddItem,\n    RemoveItem\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}