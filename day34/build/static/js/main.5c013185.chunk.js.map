{"version":3,"sources":["App.tsx","index.tsx"],"names":["TodoAdd","dispatch","useDispatch","useState","data","setData","type","value","onChange","e","target","onClick","payload","Card","title","index","className","DisplayTodoList","todo","useSelector","state","map","item","App","store","createStore","combineReducers","action","filter","el","i","ReactDOM","render","document","getElementById"],"mappings":"4LAMMA,EAAU,WACd,IAAMC,EAAWC,cADG,EAEIC,mBAAS,IAFb,mBAEbC,EAFa,KAEPC,EAFO,KAGpB,OACE,gCACE,0CACA,gCACE,uBAAOC,KAAK,OAAQC,MAAOH,EAAMI,SAAU,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOH,UACjE,wBAAQI,QAAS,WACfV,EAAS,CAAEK,KAAM,UAAWM,QAASR,IACrCC,EAAQ,KAFV,wBASFQ,EAAO,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MACdd,EAAWC,cACjB,OAAO,sBAAMc,UAAU,YAAYL,QAAS,kBAAMV,EAAS,CAAEK,KAAM,aAAcM,QAASG,KAAnF,SAA6FD,KAGhGG,EAAkB,WACtB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAgBA,EAAMF,QAE/C,OACE,qBAAKF,UAAU,WAAf,SACIE,EAAKG,KAAI,SAACC,EAAcP,GACxB,OAAO,cAAC,EAAD,CAAMD,MAAOQ,EAAMP,MAAOA,UAgB1BQ,EATH,WACV,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,OC5BAQ,EAAQC,YAAYC,YAAgB,CAACR,KATvB,WAAwC,IAAvCE,EAAsC,uDAApB,GAAIO,EAAgB,uCAMzD,MALmB,YAAhBA,EAAOrB,KACRc,EAAK,sBAAOA,GAAP,CAAcO,EAAOf,UACF,eAAhBe,EAAOrB,OACfc,EAAQA,EAAMQ,QAAO,SAACC,EAAIC,GAAL,OAAWA,IAAMH,EAAOf,YAExCQ,MAMTW,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFS,SAASC,eAAe,W","file":"static/js/main.5c013185.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\n\nconst TodoAdd = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState('')\n  return (\n    <div>\n      <h1>Todo App</h1>\n      <div>\n        <input type=\"text\"  value={data} onChange={e => setData(e.target.value)} />\n        <button onClick={() => {\n          dispatch({ type: 'ADDTODO', payload: data })\n          setData(\"\")\n        }}>Add</button>\n      </div>\n    </div>\n  )\n}\n\nconst Card = ({title, index}: {title: string, index: number}) => {\n  const dispatch = useDispatch()\n  return <span className=\"todo-list\" onClick={() => dispatch({ type: 'DELETETODO', payload: index})}>{title}</span>\n}\n\nconst DisplayTodoList = () => {\n  const todo = useSelector((state: any) => state.todo)\n  \n  return (\n    <div className=\"todoList\">\n       {todo.map((item: string, index: number) => {\n        return <Card title={item} index={index}/>\n      })}\n    </div>\n\n  )\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TodoAdd />\n      <DisplayTodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\n\n\nconst TodoReducer = (state: string[] = [], action: any) => {\n  if(action.type === \"ADDTODO\"){\n    state = [...state, action.payload]\n  } else if(action.type === \"DELETETODO\"){\n    state = state.filter((el, i) => i !== action.payload)\n  }\n  return state;\n}\n\nconst store = createStore(combineReducers({todo: TodoReducer}))\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}